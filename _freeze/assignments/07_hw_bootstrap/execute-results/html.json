{
  "hash": "de8b755329c228bfe62b44cb1fbc8c53",
  "result": {
    "markdown": "---\ntitle: \"Problem Set 7: Rags to Riches TV and the American Dream\"\ndue_date: \"November 15, 2023\"\n---\n\n\n\nThis problem set is due on **{{< meta due_date >}} at 11:59pm**. \n\nYou can find instructions for obtaining and submitting problem sets [here](/assignments/problem-sets.qmd).\n\nYou can find the GitHub Classroom link to download the template repository on the [Ed Board](https://edstem.org/us/courses/43339/resources)\n\n\n## Background \n\nDoes exposure to \"rags-to-riches\" television programming affect Americans' views about upward mobility? A recent paper investigates this question using an experiment that exposed respondents to different types of programming and measured their views about the \"American dream.\" This exercise is based on:\n\n> Kim, Eunji (2023), \"Entertaining Beliefs in Economic Mobility\". *American Journal of Political Science*, 67: 39-54. [https://doi.org/10.1111/ajps.12702]()\n\n\n\nIn this experiment, the author showed five minute clips of different TV shows that either focused on \"rags-to-riches\" story lines or a control show. The \"rags to riches\" shows were clips from *Shark Tank*, *America’s Got Talent*, *American Ninja Warrior*, or *Toy Box*. The control show was *Cesar 911*, a reality TV show that featured a young woman seeking advice about her dog’s aggressive behavior. The assignment to treatment or control was randomly assigned. After respondents watched the clip, they answered a set of questions about economic mobility, which is defined as belief in a person's ability to change their economic situation through hard work. \n\nA total of 763 respondents were collected via the online platform Mechanical Turk. The data file for this study is `rags_to_riches.csv` and contains the following variables: \n\n| Name           | Description                                                              |\n|:---------------|:-------------------------------------------------------------------------|\n| `mobility`     | An index measuring the degree to which a respondent agrees with the following statements about eco- nomic mobility: 1) Anyone who works hard has a fair chance to succeed and live a comfortable life. 2) It is possible to start out poor in this country, work and and become well-off. 3) United States is no longer the land of opportunity (reverse coded). 4) Most people who want to get ahead can make it if they’re willing to work hard. It ranges from 0 (strongly disagree) to 1 (strongly agree).      | \n| `condition2`   | 0=Control , 1=Rags-to-Riches TV Treatment |\n| `rep` | Whether respondent is a republican (0=no, 1=yes)                    |\n| `dem`  | Whether respondent is a democrat (0=no, 1=yes)            |\n| `optimism_index`      | An index measuring the degree to which a respondent agrees with the following statements: 1) In uncertain times, I usually expect the best. 2) If something can go wrong for me it will (reverse coded) 3) I am always optimistic about my future. 4) I hardly ever expect things to go my way (reverse coded). 5) I rarely count on good things happening to me (reverse coded). 6) Overall, I expect more good things to happen to me than bad. It ranges from 1 (strongly disagree) to 5 (strongly agree).                             |\n| `sjs_index`      | An index the degree to which a respondent agrees with the following statements: 1) In general, I find society to be fair. 2) American society needs to be radically restructured (reverse coded) 3) Most policies serve the greater good. 4) Everyone has a fair shot at wealth and happiness. 5) Our society is getting worse every year (reverse coded) 6) Society is set up so that people usually get what they deserve. (1=Strongly Disagree - 5=Strongly Agree)                |\n\n\n\n\\newpage\n\n## Question 1 (5 points)\n\nLoad the data into R and name it `rags` and subset to respondents that either identify as Democrats or Republicans. Then create two new variables:\n\n- `treatment` that is `\"Rags to Riches\"` when `condition2` is 1 and `\"Control\"` otherwise\n- `party` that is `\"Republican\"` when `rep` is 1 and `\"Democrat\"` otherwise\n\nCalculate the following object, saving it with the names indicated:\n\nUse the `group_by()`/`summarize()`/`pivot_wider()` to create an object called `mobility_diff` that is the difference in means in views about economic mobility (`mobility`) between the rags-to-riches TV and control conditions (`treatment`). This should be either be a 1x3 tibble with the control mean, rags-to-riches mean, and estimated ATE in the columns. (Be careful with the capitalization of the treatment condition here.)\n\nReport the ATE in the text of your write up and briefly interpret it in the context of the study.  \n\n**Rubric**: 1pt for the Rmd file rendering (autograder); 1pt for new variables (autograder); 2pts for correct `mobility_diff` tibble (autograder); 1pt write-up and interpretation (PDF).\n\n## Question 2 (10 Points)\n\nIn the first line of the code chunk for this question use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(infer)\nset.seed(02138)\n```\n:::\n\n\n\nGenerate 1,000 bootstrap replications of the estimated ATE from Question 1 and save these bootstraps in a tibble called `ate_boots`. You may use the `rep_slice_sample()` or `specify/generate` approach, but the column of bootstrapped ATEs should either be called `ATE` or `stat`.  \n\nUse these bootstraps to calculate a 95% confidence interval for the difference in means using the percentile method and save this as `ate_ci_95`, which should be a 1 by 2 tibble. \n\nUse `ggplot()`, `geom_histogram()` to plot the bootstrap distribution using a density histogram and overlay it with the confidence interval using this geom:\n\n::: {.cell}\n\n```{.r .cell-code}\ngeom_vline(xintercept = unlist(ate_ci_95))\n```\n:::\n\nThis will be manually graded in the PDF so be sure it shows up in the PDF. Use informative labels. \n\nIn the writeup, discuss if the CI contains zero? What does that mean?\n\n\n**Rubric:** 4pts for correct `ate_boots` tibble (autograder); 2pts for correct `ate_ci_95` (autograder); 3pts for plot of the bootstrap distribution and CI (PDF); 1pt for write up (PDF). \n\n## Question 3 (4 points)\n\nExplain how to interpret 95% confidence intervals in terms of repeated sampling. Is it possible to produce a 100% confidence interval in this setting? If so, what is it and is it useful?\n\n**Rubric:** 3pts for interpretation of CIs (PDF); 1pt for discussion of 100% confidence interval (PDF).\n\n## Question 4 (5 points)\n\n\nCalculate the ATE for Republican and Democratic respondents separately (using the `party` variable you created in question 1) and calculate the interaction or difference between these two ATEs. The output should be a 1 row tibble named `ate_party` with columns `ATE_Rep`, `ATE_Dem`, and `ATE_Diff` that are the ATE for Republican respondents, Democratic respondents and the difference between them, respectively. (You will need to use backticks when referring to some of the variable names here, so be careful!)\n\nIn the write-up, report the interaction and describe what it means in the substance of this experiment. \n\n**Rubric**: 3pts for correct `ate_party` tibble (autograder); 2pt for reporting the effect and interpretation (PDF). \n\n## Question 5 (11 points)\n\nIn the first line of the code chunk for this question use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(02138)\n```\n:::\n\n\n\nUse `rep_slice_sample` (not `specify/generate`) to generate 1000 boostrap replications of the difference in ATEs between Republicans and Democrats from Question 4. The resulting tibble should have 1000 rows and columns `replicate`, `ATE_Rep`, `ATE_Dem`, and `ATE_Diff`. Save this tibble as `ate_party_boots`. \n\nThen construct a 95% confidence interval for the difference between the ATE for Republicans and the ATE for Democrats and save this confidence intervals as `ate_party_ci_95`.\n\nUse `ggplot()`, `geom_histogram()` to plot the bootstrap distribution and overlay it with the confidence interval using this geom:\n\n::: {.cell}\n\n```{.r .cell-code}\ngeom_vline(xintercept = unlist(ate_party_ci_95))\n```\n:::\n\nThis will be manually graded in the PDF so be sure it shows up in the PDF. Use informative labels. \n\nIn the writeup, discuss if the CI contains zero? What does that mean?\n\n\n **Rubric**: 5pts for correct `ate_party_boots` tibble (autograder); 2pts for correct `ate_party_ci_95` (autograder); 3pts for plot of the bootstrap distribution and CI (PDF); 1pt for write up (PDF). \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}